name: Claude AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  # 既存のテストジョブ
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

  # Claude AIレビュージョブ
  claude-review:
    runs-on: ubuntu-latest
    name: Claude AI Review
    needs: test  # テスト成功後に実行
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全履歴を取得してdiffを正確に

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            **/*.ts
            **/*.js
            **/*.tsx
            **/*.jsx
            **/*.json
            **/*.md

      - name: Setup Node.js for review script
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install review dependencies
        run: |
          npm install @anthropic-ai/sdk node-fetch@3

      - name: Run Claude AI Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          cat > claude-review.js << 'EOF'
          const Anthropic = require('@anthropic-ai/sdk');
          const { execSync } = require('child_process');
          const fetch = require('node-fetch');

          async function runClaudeReview() {
            const anthropic = new Anthropic({
              apiKey: process.env.ANTHROPIC_API_KEY,
            });

            // 変更されたファイルの差分を取得
            const changedFiles = process.env.CHANGED_FILES?.split(' ') || [];
            
            if (changedFiles.length === 0) {
              console.log('No relevant files changed');
              return;
            }

            // Git diffを取得
            const gitDiff = execSync('git diff origin/main...HEAD', { encoding: 'utf8' });
            
            // PRの情報を取得
            const prResponse = await fetch(
              `https://api.github.com/repos/${process.env.REPO_OWNER}/${process.env.REPO_NAME}/pulls/${process.env.PR_NUMBER}`,
              {
                headers: {
                  'Authorization': `token ${process.env.GITHUB_TOKEN}`,
                  'Accept': 'application/vnd.github.v3+json',
                },
              }
            );
            const prData = await prResponse.json();

            // Claude にレビューを依頼
            const reviewPrompt = `
            # コードレビュー依頼

            以下のプルリクエストをレビューしてください。

            ## PR情報
            - タイトル: ${prData.title}
            - 説明: ${prData.body || '説明なし'}

            ## 変更内容（Git Diff）
            \`\`\`diff
            ${gitDiff}
            \`\`\`

            ## レビュー観点
            以下の観点でレビューしてください：

            1. **コード品質**
               - TypeScript型安全性
               - エラーハンドリング
               - パフォーマンス
               - 可読性・保守性

            2. **アーキテクチャ**
               - 設計パターンの適用
               - 責務分離
               - 拡張性

            3. **テスト**
               - テストカバレッジ
               - テストケースの妥当性
               - エッジケースの考慮

            4. **セキュリティ**
               - 脆弱性の有無
               - 入力値検証
               - 認証・認可

            5. **大相撲アプリ固有**
               - 力士データの整合性
               - 番付表示の正確性
               - 相撲用語の適切な使用

            ## 出力形式
            以下の形式でレビューコメントを作成してください：

            ### 🎯 総合評価
            [APPROVE/REQUEST_CHANGES/COMMENT]

            ### ✅ 良い点
            - [良い実装や改善点を具体的に]

            ### ⚠️ 改善提案
            - [改善すべき点を具体的に、コード例付きで]

            ### 🐛 潜在的な問題
            - [バグや脆弱性の可能性があれば]

            ### 📚 学習・参考リソース
            - [関連するベストプラクティスや参考資料があれば]

            レビューは建設的で、具体的な改善案を含めてください。
            `;

            try {
              const response = await anthropic.messages.create({
                model: 'claude-3-5-sonnet-20241022',
                max_tokens: 4000,
                messages: [
                  {
                    role: 'user',
                    content: reviewPrompt
                  }
                ]
              });

              const reviewComment = response.content[0].text;
              
              // GitHubにコメントを投稿
              await fetch(
                `https://api.github.com/repos/${process.env.REPO_OWNER}/${process.env.REPO_NAME}/issues/${process.env.PR_NUMBER}/comments`,
                {
                  method: 'POST',
                  headers: {
                    'Authorization': `token ${process.env.GITHUB_TOKEN}`,
                    'Accept': 'application/vnd.github.v3+json',
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    body: `## 🤖 Claude AIレビュー

            ${reviewComment}

            ---
            *このレビューはClaude AI（Max Plan）により自動生成されました*`
                  })
                }
              );

              console.log('Claude review posted successfully');
              
            } catch (error) {
              console.error('Error in Claude review:', error);
              process.exit(1);
            }
          }

          runClaudeReview();
          EOF

          # 環境変数として変更ファイルを設定
          export CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          node claude-review.js

  # 既存のデプロイジョブ（mainマージ後）
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: [test, claude-review]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
